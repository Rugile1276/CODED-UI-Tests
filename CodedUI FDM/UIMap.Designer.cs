// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUI_FDM
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// CheckIfXLSXIsDownloaded - Use 'CheckIfXLSXIsDownloadedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckIfXLSXIsDownloaded()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDownloadsWindow.UIItemWindow.UIForms17xlsxListItem.UINameEdit;
            #endregion

            // Verify that the 'Text' property of 'Name' text box contains 'Forms (17).xlsx'
            StringAssert.Contains(uINameEdit.Text, this.CheckIfXLSXIsDownloadedExpectedValues.UINameEditText, "Forms");
        }
        
        /// <summary>
        /// SaveXLSX
        /// </summary>
        public void SaveXLSX()
        {
            #region Variable Declarations
            WinSplitButton uISaveSplitButton = this.UIAllFormDataInternetEWindow.UINotificationToolBar.UISaveSplitButton;
            WinButton uIOpenfolderButton = this.UIAllFormDataInternetEWindow.UINotificationToolBar.UIOpenfolderButton;
            #endregion

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Click 'Save' split button
            Mouse.Click(uISaveSplitButton, new Point(49, 21));

            // Click 'Open folder' button
            Mouse.Click(uIOpenfolderButton, new Point(114, 21));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;
        }
        
        #region Properties
        public virtual CheckIfXLSXIsDownloadedExpectedValues CheckIfXLSXIsDownloadedExpectedValues
        {
            get
            {
                if ((this.mCheckIfXLSXIsDownloadedExpectedValues == null))
                {
                    this.mCheckIfXLSXIsDownloadedExpectedValues = new CheckIfXLSXIsDownloadedExpectedValues();
                }
                return this.mCheckIfXLSXIsDownloadedExpectedValues;
            }
        }
        
        public UIPrisijungtiInternetEWindow UIPrisijungtiInternetEWindow
        {
            get
            {
                if ((this.mUIPrisijungtiInternetEWindow == null))
                {
                    this.mUIPrisijungtiInternetEWindow = new UIPrisijungtiInternetEWindow();
                }
                return this.mUIPrisijungtiInternetEWindow;
            }
        }
        
        public UIAllFormDataInternetEWindow UIAllFormDataInternetEWindow
        {
            get
            {
                if ((this.mUIAllFormDataInternetEWindow == null))
                {
                    this.mUIAllFormDataInternetEWindow = new UIAllFormDataInternetEWindow();
                }
                return this.mUIAllFormDataInternetEWindow;
            }
        }
        
        public UIDownloadsWindow UIDownloadsWindow
        {
            get
            {
                if ((this.mUIDownloadsWindow == null))
                {
                    this.mUIDownloadsWindow = new UIDownloadsWindow();
                }
                return this.mUIDownloadsWindow;
            }
        }
        
        public UIFormDetailsInternetEWindow UIFormDetailsInternetEWindow
        {
            get
            {
                if ((this.mUIFormDetailsInternetEWindow == null))
                {
                    this.mUIFormDetailsInternetEWindow = new UIFormDetailsInternetEWindow();
                }
                return this.mUIFormDetailsInternetEWindow;
            }
        }
        #endregion
        
        #region Fields
        private CheckIfXLSXIsDownloadedExpectedValues mCheckIfXLSXIsDownloadedExpectedValues;
        
        private UIPrisijungtiInternetEWindow mUIPrisijungtiInternetEWindow;
        
        private UIAllFormDataInternetEWindow mUIAllFormDataInternetEWindow;
        
        private UIDownloadsWindow mUIDownloadsWindow;
        
        private UIFormDetailsInternetEWindow mUIFormDetailsInternetEWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckIfXLSXIsDownloaded'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class CheckIfXLSXIsDownloadedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Name' text box contains 'Forms (17).xlsx'
        /// </summary>
        public string UINameEditText = "Forms (17).xlsx";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIPrisijungtiInternetEWindow : BrowserWindow
    {
        
        public UIPrisijungtiInternetEWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Prisijungti - Internet Explorer";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Prisijungti - Internet Explorer");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIPrisijungtiDocument UIPrisijungtiDocument
        {
            get
            {
                if ((this.mUIPrisijungtiDocument == null))
                {
                    this.mUIPrisijungtiDocument = new UIPrisijungtiDocument(this);
                }
                return this.mUIPrisijungtiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIPrisijungtiDocument mUIPrisijungtiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIPrisijungtiDocument : HtmlDocument
    {
        
        public UIPrisijungtiDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Prisijungti";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/adfs/ls/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = @"https://adfs.bentley.com/adfs/ls/?wa=wsignin1.0&wtrealm=https%3a%2f%2fqa-ims.bentley.com%2f&wctx=rm%3d0%26id%3dpassive%26ru%3dhttps%253a%252f%252fqa-ims.bentley.com%252f%253fReturnUrl%253d%25252f%25253fwa%25253dwsignin1.0%252526wtrealm%25253dhttps%2525253a%2525252f%2525252fqa-webportal-eus.cloudapp.net%2525252f%252526wctx%25253drm%2525253d0%25252526id%2525253dpassive%25252526ru%2525253d%252525252f%252526wct%25253d2017-04-09T09%2525253a55%2525253a06Z%26ictx%3d14WoEYh8MNuRoBDahnwwjA%253d%253d&wct=2017-04-09T09%3a55%3a12Z";
            this.WindowTitles.Add("Prisijungti - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIUserNameCustom
        {
            get
            {
                if ((this.mUIUserNameCustom == null))
                {
                    this.mUIUserNameCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIUserNameCustom.SearchProperties["Id"] = "userNameInput";
                    this.mUIUserNameCustom.SearchProperties[UITestControl.PropertyNames.Name] = "UserName";
                    this.mUIUserNameCustom.SearchProperties["TagName"] = "INPUT";
                    this.mUIUserNameCustom.FilterProperties["Class"] = "text fullWidth";
                    this.mUIUserNameCustom.FilterProperties["ControlDefinition"] = "name=\"UserName\" tabindex=\"1\" class=\"text";
                    this.mUIUserNameCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIUserNameCustom.WindowTitles.Add("Prisijungti - Internet Explorer");
                    #endregion
                }
                return this.mUIUserNameCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIUserNameCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIAllFormDataInternetEWindow : BrowserWindow
    {
        
        public UIAllFormDataInternetEWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "All Form Data - Internet Explorer";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("All Form Data - Internet Explorer");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UINotificationToolBar UINotificationToolBar
        {
            get
            {
                if ((this.mUINotificationToolBar == null))
                {
                    this.mUINotificationToolBar = new UINotificationToolBar(this);
                }
                return this.mUINotificationToolBar;
            }
        }
        #endregion
        
        #region Fields
        private UINotificationToolBar mUINotificationToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UINotificationToolBar : WinToolBar
    {
        
        public UINotificationToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Notification";
            this.WindowTitles.Add("All Form Data - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public WinSplitButton UISaveSplitButton
        {
            get
            {
                if ((this.mUISaveSplitButton == null))
                {
                    this.mUISaveSplitButton = new WinSplitButton(this);
                    #region Search Criteria
                    this.mUISaveSplitButton.SearchProperties[WinButton.PropertyNames.Name] = "Save";
                    this.mUISaveSplitButton.WindowTitles.Add("All Form Data - Internet Explorer");
                    #endregion
                }
                return this.mUISaveSplitButton;
            }
        }
        
        public WinButton UIOpenfolderButton
        {
            get
            {
                if ((this.mUIOpenfolderButton == null))
                {
                    this.mUIOpenfolderButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOpenfolderButton.SearchProperties[WinButton.PropertyNames.Name] = "Open folder";
                    this.mUIOpenfolderButton.WindowTitles.Add("All Form Data - Internet Explorer");
                    #endregion
                }
                return this.mUIOpenfolderButton;
            }
        }
        #endregion
        
        #region Fields
        private WinSplitButton mUISaveSplitButton;
        
        private WinButton mUIOpenfolderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDownloadsWindow : WinWindow
    {
        
        public UIDownloadsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Downloads";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Downloads");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Downloads");
            #endregion
        }
        
        #region Properties
        public UIForms17xlsxListItem UIForms17xlsxListItem
        {
            get
            {
                if ((this.mUIForms17xlsxListItem == null))
                {
                    this.mUIForms17xlsxListItem = new UIForms17xlsxListItem(this);
                }
                return this.mUIForms17xlsxListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIForms17xlsxListItem mUIForms17xlsxListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIForms17xlsxListItem : WinListItem
    {
        
        public UIForms17xlsxListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "Forms (17).xlsx";
            this.WindowTitles.Add("Downloads");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Downloads");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIFormDetailsInternetEWindow : BrowserWindow
    {
        
        public UIFormDetailsInternetEWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Form Details - Internet Explorer";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Form Details - Internet Explorer");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIFormDetailsDocument UIFormDetailsDocument
        {
            get
            {
                if ((this.mUIFormDetailsDocument == null))
                {
                    this.mUIFormDetailsDocument = new UIFormDetailsDocument(this);
                }
                return this.mUIFormDetailsDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIFormDetailsDocument mUIFormDetailsDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIFormDetailsDocument : HtmlDocument
    {
        
        public UIFormDetailsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Form Details";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://qa-projectforms-eus.cloudapp.net/#/forms/DynamicSchema/d347a315-54ca-46d3" +
                "-bce7-9d78d3fe4cea/Meetings/221ba91f-739a-40d9-afc2-8ec9138df5c7";
            this.WindowTitles.Add("Form Details - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIDateEdit
        {
            get
            {
                if ((this.mUIDateEdit == null))
                {
                    this.mUIDateEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIDateEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Datepicker1Input_1";
                    this.mUIDateEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Meeting__x0020__Date";
                    this.mUIDateEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIDateEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIDateEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDateEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "date-form-control form-control ng-pristine ng-untouched ng-valid k-input ng-valid" +
                        "-validate-date";
                    this.mUIDateEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Meeting__x0020__Date\" class=\"date-";
                    this.mUIDateEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIDateEdit.WindowTitles.Add("Form Details - Internet Explorer");
                    #endregion
                }
                return this.mUIDateEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIDateEdit;
        #endregion
    }
}
